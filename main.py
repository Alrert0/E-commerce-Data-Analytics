import psycopg2

try:
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = psycopg2.connect(
        dbname="Project",   # –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–≤–æ–µ–π –ë–î
        user="postgres",      # —Ç–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        password="0000",  # –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å
        host="localhost",     # –µ—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ
        port="5432"           # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç PostgreSQL
    )
    cur = conn.cursor()
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL")

    # –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
    queries = [
        # Average delivery time (purchase ‚Üí customer delivery) by state
        """
        SELECT c.customer_state, 
               AVG(o.order_delivered_customer_date - o.order_purchase_timestamp) AS avg_delivery_time
        FROM orders o
        JOIN customers c ON o.customer_id = c.customer_id
        WHERE o.order_delivered_customer_date IS NOT NULL
        GROUP BY c.customer_state
        ORDER BY avg_delivery_time;
        """,

        # Product categories with the highest average item price
        """
        SELECT p.product_category_name, AVG(oi.price) AS avg_price
        FROM order_items oi
        JOIN products p ON oi.product_id = p.product_id
        GROUP BY p.product_category_name
        ORDER BY avg_price DESC
        LIMIT 10;
        """,

        # Top 10 customers by total spending (items + freight)
        """
        SELECT c.customer_unique_id, SUM(oi.price + oi.freight_value) AS total_spent
        FROM orders o
        JOIN customers c ON o.customer_id = c.customer_id
        JOIN order_items oi ON o.order_id = oi.order_id
        GROUP BY c.customer_unique_id
        ORDER BY total_spent DESC
        LIMIT 10;
        """
    ]

    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏
    for i, q in enumerate(queries, start=1):
        print(f"\n‚ñ∂ Query {i}:")
        cur.execute(q)
        rows = cur.fetchall()
        for row in rows:
            print(row)

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    cur.close()
    conn.close()
    print("\nüîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")

except Exception as e:
    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏:", e)
